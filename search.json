[{"path":"https://sdaume.github.io/srcquantcourse/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Stefan Daume Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Example 1: Topic modelling Covid preprints","text":"example topic modelling analysis using Structural Topic Model (STM) (Roberts, Stewart, Tingley 2019) explore subset bioRxiv medRxiv preprints covering research related Covid-19. medRxiv website actually provides access dedicated collection preprints medRxix bioRxiv covering COVID-19 SARS-CoV-2. however work whole preprint collection create subset using keyword matching. document assumes familiarity Structural Topic Modeling (STM). Please consult stm package vignette (Roberts, Stewart, Tingley 2019) background.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"getting-the-document-data","dir":"Articles","previous_headings":"","what":"Getting the document data","title":"Example 1: Topic modelling Covid preprints","text":"bioRxiv medRxiv servers provide API access retrieve preprint meta-data. One option access API use [medrxivr](https://docs.ropensci.org/medrxivr/) package. code snippet example collect bioRxiv preprint meta-data year 2015. package setup support exploring different thematic preprint subsets assumes usage preprints servers published 2013 2023. data can shared package usage API terms bioRxiv/medRxiv permit redistribution rehosting complete data; therefore package provides scripts collect clean data order replicate analysis (check /data-raw package repository). documented examples assume obtained data created local copy replication analyses. code allow . NOTE time writing returned dataset 365526 records. Retrieving data take several hours. replicating analysis like use bioRxiv/medRxiv API responsibly. Consider collecting smaller datasets (example shown example require preprints 2020 2023). Alternatively, use bulk snapshot detailed . addition 15 meta-data variables returned via API code adds server variable indicate origin preprint. important variable examples shown .","code":"library(medrxivr)  biorxiv_raw <- mx_api_content(server = \"biorxiv\",                               from_date = \"2015-12-01\",                               to_date = \"2015-12-31\") library(dplyr) library(medrxivr)  # get publications from medRxiv and bioRxiv pubs_biorxiv_raw <- medrxivr::mx_api_content(server = \"biorxiv\",                                              #from_date = \"2019-01-01\",                                              to_date = \"2023-12-31\")  pubs_medrxiv_raw <- medrxivr::mx_api_content(server = \"medrxiv\",                                              #from_date = \"2019-01-01\",                                              to_date = \"2023-12-31\")  pubs_biorxiv_raw <- pubs_biorxiv_raw %>%   mutate(server = \"biorxiv\")  pubs_medrxiv_raw <- pubs_medrxiv_raw %>%   mutate(server = \"medrxiv\")  preprints_raw <- dplyr::bind_rows(pubs_biorxiv_raw, pubs_medrxiv_raw)  save(preprints_raw, file = \"./data-raw/preprints_raw.Rdata\")"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"cleaning-filtering-and-annotating-the-data","dir":"Articles","previous_headings":"","what":"Cleaning, filtering and annotating the data","title":"Example 1: Topic modelling Covid preprints","text":"first step raw preprint data cleaned. Specifically, want retain one unique record per preprint, multiple versions unique doi may exist. retain latest version per doi also ensure duplicate dois. crucial need unique identifier document want include topic modelling. Next annotate data additional variables, specifically want reduce publication date publication year, add additional variable is_published, inferred published variable. latter provides DOI journal preprint published peer review. also limit data preprints 2020 2023 (analysis Covid topics preprints prior 2020 relevant), retain variables may want explore document covariates, .e. document propereties potentially influence prevalence topics. Finally, define keywords reduce preprint set preprints contain one keywords either title abstract, resulting subset 29692 publications.","code":"library(dplyr)  preprints_cleaned <- preprints_raw %>%   group_by(doi) %>%   filter(version == max(version)) %>%   ungroup() %>%   distinct(doi, .keep_all = TRUE) preprints <- preprints_cleaned %>%   mutate(published = stringr::str_trim(published)) %>%   mutate(published = na_if(published, \"NA\")) %>%   mutate(is_published = as.numeric(!is.na(published))) %>%   mutate(is_published = case_when(is_published == 1 ~ \"published\",                                   is_published == 0 ~ \"not published\",                                   TRUE ~ \"undefined\")) %>%   mutate(year = lubridate::year(date)) %>%   filter(year >= 2020 & year <= 2023) %>%    select(doi, server, title, abstract, date, year, version, is_published) library(stringr)  keywords <- c(\"sars-cov\", \"covid\")  search_pattern <- stringr::regex(paste(keywords, collapse = \"|\"),                                   ignore_case = TRUE)  covid_preprints <- preprints %>%   filter(stringr::str_detect(title, pattern = search_pattern) |            stringr::str_detect(abstract, pattern = search_pattern))"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"preparing-and-preprocessing-the-documents-for-text-analysis","dir":"Articles","previous_headings":"","what":"Preparing and preprocessing the documents for text analysis","title":"Example 1: Topic modelling Covid preprints","text":"order analyze preprints stm package need create representation documents document meta-data stm can utilize. stm offers built-methods support (see specifically textProcessor() prepDocuments() methods (Roberts, Stewart, Tingley 2019)). use instead quanteda package (Benoit et al. 2018) provides broad range methods text pre-processing analysis, creating formats also supported stm.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"create-a-corpus","dir":"Articles","previous_headings":"Preparing and preprocessing the documents for text analysis","what":"Create a corpus","title":"Example 1: Topic modelling Covid preprints","text":"First, create corpus object dataframe preprints. corpus essentially library documents used next steps. specifies variable used uniquely identify documents variable holds textual content (preprint abstracts) processed. Echoing corpus provide basic information. variables original dataframe interpreted included document metadata (‘docvars’), later included STM topic modelling process.","code":"library(quanteda)  pubs_corpus <- covid_preprints %>%   quanteda::corpus(docid_field = \"doi\", text_field = \"abstract\")  # pubs_corpus # Corpus consisting of 29,692 documents and 6 docvars."},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"tokenize-and-preprocess","dir":"Articles","previous_headings":"Preparing and preprocessing the documents for text analysis","what":"Tokenize and preprocess","title":"Example 1: Topic modelling Covid preprints","text":"analysis corpus documents tokenized, .e. processing texts broken semantic units relevant analysis. common approach interpret word (typically designated whitespaces punctuation) token. applied well. quanteda offers several alternative approaches. Instead individual words sequences words (n-grams) example used. tokenization method also provides several options preprocessing filtering tokens. example tokenizing simultaneously remove punctuation, numbers, special symbols URLs. Furthermore, split words containing hyphens, word like social-ecological thus split two individual tokens (social ecological). text preprocessing choices strongly influence results text analysis (Denny Spirling 2018) thouroughly explained, carefully evaluated ideally based theory.","code":"pubs_tokens <- pubs_corpus %>%   quanteda::tokens(remove_punct = TRUE,                    remove_symbols = TRUE,                    remove_numbers = TRUE,                    remove_url = TRUE,                    remove_separators = TRUE,                    split_hyphens = TRUE)"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"create-a-document-feature-matrix","dir":"Articles","previous_headings":"Preparing and preprocessing the documents for text analysis","what":"Create a Document-feature matrix","title":"Example 1: Topic modelling Covid preprints","text":"tokens object used create document-feature matrix. statistical analysis reduces tokens matrix documents (rows) unique terms (columns) counts number occurrences term document. quanteda captures features supports general options terms (see quanteda documentation details).","code":"pubs_dfm <- pubs_tokens %>%   quanteda::dfm()"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"filter-terms-and-documents","dir":"Articles","previous_headings":"Preparing and preprocessing the documents for text analysis","what":"Filter terms and documents","title":"Example 1: Topic modelling Covid preprints","text":"followed (optional) processing filtering steps. common option example — reduce size data assist interpretation — removal -called stopwords (e.g. “”, “”, “” etc). step omitted reducing words (terms) word stem. stemming algorithm (several available) reduces words word stem. terms “universal”, “university” “universe” example reduced word stem “univers”; example indicates approach may require careful consideration. Stemming advantage potentially reduce size matrix substantially. options may considered reduce noise /size matrix. following code removes example terms (features) consist one character, terms appear least two different documents, furthermore remove documents contain least 5 tokens. example drops one document reduces number retained features half.","code":"pubs_dfm <- pubs_dfm %>%   quanteda::dfm_remove(pattern = quanteda::stopwords(\"english\")) #%>%   #quanteda::dfm_wordstem() # echo the result > pubs_dfm  Document-feature matrix of: 29,692 documents, 82,472 features (99.87% sparse) and 6 docvars.                 features docs             nitric oxide synthesised three isoforms synthases viz nnos neurons enos   10.1101/038398      6     6           1     1        1         1   1    1       2    1   10.1101/058511      0     0           0     0        0         0   0    0       0    0   10.1101/292979      0     0           0     2        0         0   0    0       0    0   10.1101/402370      0     0           0     0        0         0   0    0       0    0   10.1101/420737      0     0           0     0        0         0   0    0       0    0   10.1101/596700      0     0           0     0        0         0   0    0       0    0 [ reached max_ndoc ... 29,686 more documents, reached max_nfeat ... 82,462 more features ] pubs_dfm <- pubs_dfm %>%   quanteda::dfm_remove(min_nchar = 2) %>%   quanteda::dfm_trim(min_docfreq = 2, docfreq_type = \"count\") %>%   quanteda::dfm_subset(quanteda::ntoken(.) > 4) # echo the result > pubs_dfm  Document-feature matrix of: 29,691 documents, 37,093 features (99.72% sparse) and 6 docvars.                 features docs             nitric oxide synthesised three isoforms synthases viz neurons enos endothelial   10.1101/038398      6     6           1     1        1         1   1       2    1           2   10.1101/058511      0     0           0     0        0         0   0       0    0           0   10.1101/292979      0     0           0     2        0         0   0       0    0           0   10.1101/402370      0     0           0     0        0         0   0       0    0           0   10.1101/420737      0     0           0     0        0         0   0       0    0           0   10.1101/596700      0     0           0     0        0         0   0       0    0           0 [ reached max_ndoc ... 29,685 more documents, reached max_nfeat ... 37,083 more features ]"},{"path":[]},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"fitting-the-stm-topic-model","dir":"Articles","previous_headings":"Topic modeling","what":"Fitting the STM topic model","title":"Example 1: Topic modelling Covid preprints","text":"key input number topics (K) model fit , set 20 (see separate document discussion suitable choices number topics). fitting topic model convert document-feature matrix native STM format. order fit topic model stm() function need set documents, vocabulary documents composed dataframe specifying values document meta-data variables (data) can used process “covariates” might influence prevalence topics document. , example , ask stm consider origin document (server) publication year fitting topic model. argument prevalence = ~ server * s(year) expresses assume prevalence topics document influenced two variables, also interact, .e. work hypothesis different temporal trends expected documents published either two preprint servers1. consideration covariates optional. omitted model reduces Correlated Topic Model (Blei Lafferty 2007; Roberts, Stewart, Tingley 2019). also supply seed, allows replicate results topic modeling.","code":"library(stm)  covid_stm_docs <- quanteda::convert(pubs_dfm, to = \"stm\")  covid_model_K20 <- stm(documents = covid_stm_docs$documents,                        vocab = covid_stm_docs$vocab,                        data = covid_stm_docs$meta,                        prevalence = ~ server * s(year),                        K = 20,                        verbose = TRUE,                        seed = 9868467)"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"estimating-the-effect-of-document-covariates","dir":"Articles","previous_headings":"Topic modeling","what":"Estimating the effect of document covariates","title":"Example 1: Topic modelling Covid preprints","text":"model converged can estimate effect document covariates topic prevalence. estimateEffect() function allows run regressions based formula specified first argument. identical formula used fitting topic model, regressions run 20 topics. metadata used previously needs supplied function addition topic model object. concludes fitting model. following sections step sample exploration topic model.","code":"covid_effect_K20 <- estimateEffect(1:20 ~ server * s(year),                                    stmobj = covid_model_K20,                                    metadata = covid_stm_docs$meta)"},{"path":[]},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"basic-topic-model-information","dir":"Articles","previous_headings":"Analysing and interpreting the topic model","what":"Basic topic model information","title":"Example 1: Topic modelling Covid preprints","text":"topic model defined two matrices capture probability distributions topics documents (gamma matrix) words (terms) topics (beta matrix). can start exploring built-functions stm. plot() function plots chart showing topic proportions topics model. topic identified unique ID (1-20) plot five words (terms) highest probability associated given topic. gives early indication distinct latent topics analysed subset preprints.  summary() function provides detailed view topics can help begin interpreting labeling 20 topics. Specifically, output shows four different sets words associated topic. ‘Highest Prob’ lists words highest probability associated topic. comparison different topics highlights term covid high probability several topics. list ‘FREX’ words summarizes words frequent exclusive topic, .e. characterize topic comparison topics (consult stm::labelTopics() details well Lift Score word sets).","code":"plot(covid_model_K20, n = 5) summary(covid_model_K20) ># A topic model with 20 topics, 29691 documents and a 37093 word dictionary. ># Topic 1 Top Words: >#       Highest Prob: model, can, covid, transmission, epidemic, data, disease  >#       FREX: npis, mathematical, compartmental, scenarios, seir, reproduction, sir  >#       Lift: 1we, abms, ao_scplowbstractc_scplowas, apt, artefact, asilv, asymptotically  >#       Score: distancing, social, epidemic, reproduction, npis, model, r0  ># Topic 2 Top Words: >#       Highest Prob: cov, sars, drug, antiviral, activity, drugs, covid  >#       FREX: src, figdir, o_linksmallfig, c_fig, m_fig, o_fig, gif  >#       Lift: k777, gif, pmmov, wwtps, 13k, 17k, 18k  >#       Score: mpro, antiviral, drug, inhibitors, protease, drugs, compounds  ># Topic 3 Top Words: >#       Highest Prob: covid, risk, age, mortality, ci, associated, years  >#       FREX: hispanic, ethnicity, pregnant, racial, black, smoking, preterm  >#       Lift: 65s, asmr, assault, backgroundethnic, backgroundracial, backgroundsocio, brunt  >#       Score: ci, age, women, mortality, ethnicity, aor, hispanic  ># Topic 4 Top Words: >#       Highest Prob: covid, health, pandemic, mental, social, study, survey  >#       FREX: loneliness, emotional, attitude, depression, insecurity, mental, anxiety  >#       Lift: insecurity, accelerometers, amhara, angry, anovas, asd, asleep  >#       Score: mental, anxiety, depression, respondents, social, psychological, students  ># Topic 5 Top Words: >#       Highest Prob: sars, cov, infection, testing, transmission, cases, children  >#       FREX: ifr, seroprevalence, schools, school, contacts, household, attack  >#       Lift: inmates, 19y, 35y, 39y, 9a, abidjan, addscovid  >#       Score: school, seroprevalence, children, schools, household, transmission, testing  ># Topic 6 Top Words: >#       Highest Prob: cov, sars, virus, viral, coronavirus, respiratory, infection  >#       FREX: bats, cats, deer, animals, covs, wildlife, hcov  >#       Lift: cats, 5x106, aav6, aegyptiacus, aethiops, affinis, agm  >#       Score: cov, sars, mice, rna, viruses, coronaviruses, animals  ># Topic 7 Top Words: >#       Highest Prob: patients, covid, hospital, disease, clinical, severe, admission  >#       FREX: acei, admission, arbs, admitted, icu, aki, aceis  >#       Lift: 1.1x109, 2020r1g1a1a01006229, 2l, 4.0x109, 40y, ahmad, ahrq  >#       Score: patients, admission, icu, hospital, admitted, ci, hospitalized  ># Topic 8 Top Words: >#       Highest Prob: covid, cases, countries, number, deaths, data, pandemic  >#       FREX: cfr, italy, cities, country, countries, fatality, china  >#       Lift: 1000m, 1th, 55th, abysmally, abyss, adhanom, adminstat  >#       Score: countries, cases, lockdown, deaths, country, cfr, daily  ># Topic 9 Top Words: >#       Highest Prob: protein, binding, spike, sars, cov, ace2, rbd  >#       FREX: conformational, cryo, conformation, glycans, conformations, nanobodies, residues  >#       Lift: 13c, 6lzg, 6m0j, 6vw1, 6vxx, aabpu, abdab  >#       Score: binding, rbd, protein, spike, ace2, proteins, epitopes  ># Topic 10 Top Words: >#       Highest Prob: data, can, learning, covid, using, model, based  >#       FREX: aerosol, n95, aerosols, respirators, decontamination, airborne, machine  >#       Lift: elastomeric, forehead, papr, radiomics, exhaled, singing, 0.3m  >#       Score: learning, masks, aerosol, machine, respirators, n95, mask  ># Topic 11 Top Words: >#       Highest Prob: vaccine, vaccination, covid, middle, vaccines, dot, dose  >#       FREX: hesitancy, dot, vaccinate, middle, hesitant, rollout, ve  >#       Lift: #949850, acceptant, adjrr, aesis, amparo, analysesthe, andersen  >#       Score: vaccination, vaccine, dot, booster, dose, vaccinated, middle  ># Topic 12 Top Words: >#       Highest Prob: studies, care, covid, health, research, data, pandemic  >#       FREX: reviews, telemedicine, preprints, scoping, articles, blacksquare, publications  >#       Lift: preprints, 1.2m, aas, abbreviating, accustomed, activists, advisor  >#       Score: review, care, services, articles, reviews, pubmed, service  ># Topic 13 Top Words: >#       Highest Prob: sars, cov, genome, mutations, sequencing, viral, variants  >#       FREX: phylogenetic, gisaid, clades, wgs, genomes, genomic, haplotype  >#       Lift: clades, snvs, 1.1.7s, 11083g, 14408c, 17del, 20a  >#       Score: mutations, genome, wastewater, genomes, sequences, sequencing, genomic  ># Topic 14 Top Words: >#       Highest Prob: cells, cell, sars, cov, expression, infection, ace2  >#       FREX: autophagy, mirnas, mirna, at2, ifns, ciliated, scrna  >#       Lift: 25hc, angiotensinogen, antagonizes, apcs, arf6, asgr1, at2s  >#       Score: cells, expression, ace2, cell, genes, epithelial, tmprss2  ># Topic 15 Top Words: >#       Highest Prob: antibody, sars, cov, antibodies, igg, responses, vaccine  >#       FREX: iga, bau, igg, humoral, immunogenicity, as03, reactogenicity  >#       Lift: 1x1011, 28d, 30ug, ad26cov2, addas03, adhu5, atellica  >#       Score: igg, antibody, antibodies, neutralizing, rbd, vaccine, spike  ># Topic 16 Top Words: >#       Highest Prob: sars, cov, pcr, samples, rt, test, testing  >#       FREX: ag, rdt, rdts, lod, rt, panbio, kits  >#       Lift: poct, cobas, panbio, #yomecorono, 1.6x104, 10min, 15min  >#       Score: rt, pcr, assay, samples, saliva, detection, assays  ># Topic 17 Top Words: >#       Highest Prob: variants, omicron, variant, delta, ba, cov, sars  >#       FREX: omicron, ba, xbb, subvariants, delta, bq, voc  >#       Lift: 1.5s, 129s2, 1f11, 2.86s, 3b8, 417n, 75d30121c11061  >#       Score: omicron, ba, variants, variant, delta, mutations, voc  ># Topic 18 Top Words: >#       Highest Prob: covid, patients, disease, severe, immune, inflammatory, associated  >#       FREX: autoantibodies, ipf, balf, neutrophils, il, fibrosis, autoantibody  >#       Lift: 18f, 24hr, a2ar, aab, actinobacteria, activin, adiponectin  >#       Score: inflammatory, il, patients, cytokine, inflammation, cytokines, endothelial  ># Topic 19 Top Words: >#       Highest Prob: patients, treatment, covid, group, days, day, trial  >#       FREX: placebo, randomized, hcq, soc, azithromycin, arm, tocilizumab  >#       Lift: 200mg, 400mg, 500mg, 600mg, 800mg, aureobasidium, ayush  >#       Score: placebo, hcq, trial, patients, randomized, tocilizumab, hydroxychloroquine  ># Topic 20 Top Words: >#       Highest Prob: covid, symptoms, long, workers, infection, participants, study  >#       FREX: hcws, taste, smell, hcw, fatigue, workers, headache  >#       Lift: chemesthetic, dirty, eyewear, firefighters, ohs, principality, psychophysical  >#       Score: symptoms, hcws, workers, participants, symptom, hcw, fatigue"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"topic-document-and-term-topic-distributions","dir":"Articles","previous_headings":"Analysing and interpreting the topic model","what":"Topic-document and term-topic distributions","title":"Example 1: Topic modelling Covid preprints","text":"mentioned, topic model defined gamma (distribution topics words) beta (distribution terms topics) matrices. help tidytext package can extract dataframes detailed analysis. row resulting dataframes lists probability (gamma) given topic occurring given document2. Similarly, beta matrix (extracted dataframe) lists row probability (beta) given term occurring given topic. Starting beta matrix can create word clouds explore useful semantic labels topic.","code":"># Rows: 593,820 ># Columns: 3 ># $ document  [3m [38;5;246m<int> [39m [23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18… ># $ topic     [3m [38;5;246m<int> [39m [23m 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… ># $ gamma     [3m [38;5;246m<dbl> [39m [23m 0.001283143, 0.003547179, 0.003745510, 0.005495076, 0.0630417… ># Rows: 741,860 ># Columns: 3 ># $ topic  [3m [38;5;246m<int> [39m [23m 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1… ># $ term   [3m [38;5;246m<chr> [39m [23m \"#1\", \"#1\", \"#1\", \"#1\", \"#1\", \"#1\", \"#1\", \"#1\", \"#1\", \"#1\", \"#1\"… ># $ beta   [3m [38;5;246m<dbl> [39m [23m 1.874650e-112, 2.519509e-119, 1.248970e-118, 6.665355e-160, 3.21…"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"understanding-and-labeling-topics","dir":"Articles","previous_headings":"Analysing and interpreting the topic model","what":"Understanding and labeling topics","title":"Example 1: Topic modelling Covid preprints","text":"mentioned previously stm can use word probabilities also compute FREX (frequent exclusive) words per topic. can retrieved stm::labelTopics() function, returns ordered lists different word sets characterizing topic. can combine information high probability FREX words create word clouds topic, might help assign summary label topic. Word clouds showing 50 probable terms per topic. Words scaled normalized probability per topic, terms also among top 20 FREX terms highlighted orange. readability, terms ‘sars’, ‘cov’ ‘covid’ removed occur high probability topics. review combination FREX high probability terms distinct topics emerging, : “epidemic models” (Topic 1), “vaccines” (Topic 11), “testing” (Topic 16), “virus variants” (Topic 17), “treatments” (Topic 2), “mortality risks” (Topic 3), “mental health” (Topic 4), “country-wise case reports” (Topic 8), “virus molecular structure” (Topic 9).","code":"library(tidyr) library(tibble)  # get the top FREX words frex_top20 <- as.data.frame(labelTopics(covid_model_K20, n = 20)$frex) %>%   rownames_to_column(var = \"topic\") %>%   pivot_longer(starts_with(\"V\"), values_to = \"term\") %>%   mutate(is_frex = 1) %>%   select(-name)  topic_words <- tidytext::tidy(covid_model_K20, matrix = \"beta\") %>%   #filter(!(term %in% c(\"sars\", \"cov\", \"covid\"))) %>%    mutate(topic = as.character(topic)) %>%   group_by(topic) %>%   arrange(-beta) %>%   slice_head(n = 50) %>%   mutate(beta_norm = (beta - min(beta)) / (max(beta) - min(beta))) %>%   ungroup() %>%   left_join(frex_top20, by = c(\"topic\", \"term\")) %>%   mutate(is_frex = ifelse(is.na(is_frex), \"0\", \"1\")) %>%   filter(!(term %in% c(\"sars\", \"cov\", \"covid\"))) %>%   mutate(topic = paste(\"Topic\", topic))  ggplot(topic_words, aes(label = term, size = beta_norm, color = is_frex)) +   ggwordcloud::geom_text_wordcloud_area(shape = \"square\",                                         rm_outside = TRUE) +   scale_radius(range = c(2, 13)) +   scale_color_manual(values = c(\"0\" = \"black\", \"1\" = \"#D55E00\")) +    facet_wrap(~topic, ncol = 4)"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"covariate-effects","dir":"Articles","previous_headings":"Analysing and interpreting the topic model","what":"Covariate effects","title":"Example 1: Topic modelling Covid preprints","text":"key feature STM incorporation document covariates topic model. example considered publication year preprint server covariates might influence prevalence topic document. also applied regression covariates fit model, extracted stm::estimateEffect(). first exploration can print regression tables selected topics. following sections illustrate exploration covariate effects several examples.","code":"summary(covid_effect_K20) >#  ># Call: ># estimateEffect(formula = 1:20 ~ server * s(year), stmobj = covid_model_K20,  >#     metadata = covid_stm_docs$meta) >#  >#  ># Topic 1: >#  ># Coefficients: >#                          Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.0234627  0.0036423   6.442 1.20e-10 *** ># servermedrxiv           0.1239454  0.0043044  28.795  < 2e-16 *** ># s(year)1               -0.0020466  0.0145228  -0.141    0.888     ># s(year)2               -0.0004648  0.0151158  -0.031    0.975     ># s(year)3                0.0083884  0.0066879   1.254    0.210     ># servermedrxiv:s(year)1 -0.0694947  0.0172184  -4.036 5.45e-05 *** ># servermedrxiv:s(year)2 -0.0967248  0.0187860  -5.149 2.64e-07 *** ># servermedrxiv:s(year)3 -0.0705842  0.0084199  -8.383  < 2e-16 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 2: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.098638   0.002883  34.208  < 2e-16 *** ># servermedrxiv          -0.085920   0.003152 -27.261  < 2e-16 *** ># s(year)1               -0.019935   0.011414  -1.747   0.0807 .   ># s(year)2               -0.011288   0.013377  -0.844   0.3988     ># s(year)3               -0.028588   0.004552  -6.280 3.42e-10 *** ># servermedrxiv:s(year)1  0.021595   0.012626   1.710   0.0872 .   ># servermedrxiv:s(year)2  0.008191   0.014458   0.567   0.5710     ># servermedrxiv:s(year)3  0.030353   0.005276   5.753 8.85e-09 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 3: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.011065   0.002789   3.968 7.28e-05 *** ># servermedrxiv           0.053957   0.003281  16.445  < 2e-16 *** ># s(year)1               -0.002581   0.011350  -0.227    0.820     ># s(year)2               -0.002029   0.011800  -0.172    0.863     ># s(year)3                0.001240   0.004828   0.257    0.797     ># servermedrxiv:s(year)1  0.014993   0.013661   1.098    0.272     ># servermedrxiv:s(year)2  0.014241   0.014881   0.957    0.339     ># servermedrxiv:s(year)3  0.029852   0.006426   4.645 3.41e-06 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 4: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.008948   0.003278   2.730  0.00634 **  ># servermedrxiv           0.057672   0.003878  14.872  < 2e-16 *** ># s(year)1                0.004647   0.013302   0.349  0.72682     ># s(year)2               -0.005222   0.013994  -0.373  0.70905     ># s(year)3                0.004463   0.005806   0.769  0.44211     ># servermedrxiv:s(year)1  0.020406   0.016294   1.252  0.21047     ># servermedrxiv:s(year)2 -0.004101   0.017964  -0.228  0.81945     ># servermedrxiv:s(year)3  0.020339   0.007714   2.637  0.00838 **  ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 5: >#  ># Coefficients: >#                          Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             4.931e-03  2.336e-03   2.111   0.0348 *   ># servermedrxiv           5.429e-02  2.779e-03  19.533   <2e-16 *** ># s(year)1               -7.138e-04  9.404e-03  -0.076   0.9395     ># s(year)2                7.144e-06  9.896e-03   0.001   0.9994     ># s(year)3                1.108e-03  4.174e-03   0.266   0.7906     ># servermedrxiv:s(year)1  2.601e-02  1.159e-02   2.244   0.0249 *   ># servermedrxiv:s(year)2 -1.693e-03  1.208e-02  -0.140   0.8886     ># servermedrxiv:s(year)3 -8.505e-03  5.401e-03  -1.575   0.1154     ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 6: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.148620   0.003809  39.021  < 2e-16 *** ># servermedrxiv          -0.115796   0.004193 -27.618  < 2e-16 *** ># s(year)1               -0.021004   0.013446  -1.562   0.1183     ># s(year)2               -0.049320   0.012085  -4.081 4.50e-05 *** ># s(year)3               -0.043734   0.006074  -7.201 6.14e-13 *** ># servermedrxiv:s(year)1  0.005821   0.015035   0.387   0.6986     ># servermedrxiv:s(year)2  0.035550   0.013878   2.562   0.0104 *   ># servermedrxiv:s(year)3  0.031045   0.006975   4.451 8.59e-06 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 7: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.010706   0.002909   3.680 0.000234 *** ># servermedrxiv           0.086028   0.003467  24.813  < 2e-16 *** ># s(year)1               -0.003956   0.011507  -0.344 0.731028     ># s(year)2               -0.007900   0.012174  -0.649 0.516399     ># s(year)3               -0.003368   0.005148  -0.654 0.512930     ># servermedrxiv:s(year)1 -0.049334   0.014357  -3.436 0.000591 *** ># servermedrxiv:s(year)2 -0.019634   0.015639  -1.255 0.209329     ># servermedrxiv:s(year)3 -0.038429   0.006547  -5.870 4.41e-09 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 8: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.027245   0.003012   9.044  < 2e-16 *** ># servermedrxiv           0.108703   0.003542  30.688  < 2e-16 *** ># s(year)1               -0.012934   0.012334  -1.049  0.29436     ># s(year)2               -0.018282   0.012568  -1.455  0.14579     ># s(year)3               -0.017076   0.005200  -3.284  0.00102 **  ># servermedrxiv:s(year)1 -0.088416   0.014849  -5.954 2.64e-09 *** ># servermedrxiv:s(year)2 -0.046568   0.015649  -2.976  0.00292 **  ># servermedrxiv:s(year)3 -0.060200   0.006508  -9.250  < 2e-16 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 9: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.170559   0.004596  37.113  < 2e-16 *** ># servermedrxiv          -0.164013   0.004791 -34.231  < 2e-16 *** ># s(year)1                0.017824   0.018947   0.941   0.3469     ># s(year)2               -0.034795   0.020095  -1.732   0.0834 .   ># s(year)3               -0.028099   0.006605  -4.254 2.10e-05 *** ># servermedrxiv:s(year)1 -0.010674   0.020099  -0.531   0.5954     ># servermedrxiv:s(year)2  0.033138   0.022014   1.505   0.1323     ># servermedrxiv:s(year)3  0.028044   0.007177   3.908 9.34e-05 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 10: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.044738   0.003367  13.287  < 2e-16 *** ># servermedrxiv           0.011776   0.003655   3.222  0.00128 **  ># s(year)1                0.004313   0.014554   0.296  0.76699     ># s(year)2                0.000114   0.013258   0.009  0.99314     ># s(year)3                0.026190   0.005872   4.460 8.23e-06 *** ># servermedrxiv:s(year)1 -0.017840   0.016227  -1.099  0.27160     ># servermedrxiv:s(year)2 -0.030340   0.015420  -1.968  0.04913 *   ># servermedrxiv:s(year)3 -0.040949   0.007091  -5.774 7.80e-09 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 11: >#  ># Coefficients: >#                        Estimate Std. Error t value Pr(>|t|)     ># (Intercept)            0.005048   0.002338   2.159  0.03086 *   ># servermedrxiv          0.008224   0.002706   3.040  0.00237 **  ># s(year)1               0.010101   0.009901   1.020  0.30762     ># s(year)2               0.010143   0.010097   1.005  0.31509     ># s(year)3               0.006405   0.004251   1.507  0.13192     ># servermedrxiv:s(year)1 0.056984   0.011776   4.839 1.31e-06 *** ># servermedrxiv:s(year)2 0.073557   0.012473   5.898 3.73e-09 *** ># servermedrxiv:s(year)3 0.047026   0.005965   7.883 3.29e-15 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 12: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.022021   0.002828   7.786 7.13e-15 *** ># servermedrxiv           0.041906   0.003397  12.338  < 2e-16 *** ># s(year)1               -0.008713   0.011299  -0.771    0.441     ># s(year)2               -0.005626   0.012297  -0.458    0.647     ># s(year)3               -0.002572   0.004895  -0.525    0.599     ># servermedrxiv:s(year)1 -0.006422   0.013916  -0.461    0.644     ># servermedrxiv:s(year)2  0.009267   0.015881   0.584    0.560     ># servermedrxiv:s(year)3  0.034783   0.006517   5.337 9.51e-08 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 13: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.104409   0.003154  33.105  < 2e-16 *** ># servermedrxiv          -0.086389   0.003444 -25.082  < 2e-16 *** ># s(year)1               -0.031734   0.015571  -2.038   0.0415 *   ># s(year)2               -0.027941   0.015195  -1.839   0.0660 .   ># s(year)3               -0.023349   0.005635  -4.144 3.42e-05 *** ># servermedrxiv:s(year)1  0.077968   0.018024   4.326 1.52e-05 *** ># servermedrxiv:s(year)2  0.028211   0.016948   1.665   0.0960 .   ># servermedrxiv:s(year)3  0.041171   0.006638   6.202 5.63e-10 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 14: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.124586   0.003383  36.831   <2e-16 *** ># servermedrxiv          -0.112712   0.003581 -31.478   <2e-16 *** ># s(year)1                0.004196   0.015139   0.277    0.782     ># s(year)2               -0.007429   0.015840  -0.469    0.639     ># s(year)3                0.007569   0.006372   1.188    0.235     ># servermedrxiv:s(year)1 -0.003050   0.015986  -0.191    0.849     ># servermedrxiv:s(year)2  0.005165   0.016848   0.307    0.759     ># servermedrxiv:s(year)3 -0.005155   0.007141  -0.722    0.470     ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 15: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.053490   0.003520  15.197  < 2e-16 *** ># servermedrxiv          -0.027397   0.003963  -6.914 4.82e-12 *** ># s(year)1                0.044371   0.014864   2.985  0.00284 **  ># s(year)2                0.025082   0.015482   1.620  0.10522     ># s(year)3                0.017665   0.006488   2.723  0.00648 **  ># servermedrxiv:s(year)1  0.003909   0.017399   0.225  0.82226     ># servermedrxiv:s(year)2  0.033366   0.017690   1.886  0.05929 .   ># servermedrxiv:s(year)3 -0.003362   0.007595  -0.443  0.65797     ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 16: >#  ># Coefficients: >#                          Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.0532032  0.0034782  15.296  < 2e-16 *** ># servermedrxiv           0.0175822  0.0040489   4.342 1.41e-05 *** ># s(year)1               -0.0497154  0.0128790  -3.860 0.000114 *** ># s(year)2               -0.0293523  0.0132792  -2.210 0.027086 *   ># s(year)3               -0.0279017  0.0057130  -4.884 1.05e-06 *** ># servermedrxiv:s(year)1  0.0609119  0.0149838   4.065 4.81e-05 *** ># servermedrxiv:s(year)2  0.0012793  0.0160081   0.080 0.936305     ># servermedrxiv:s(year)3 -0.0007393  0.0071420  -0.104 0.917555     ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 17: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.012509   0.002387   5.239 1.62e-07 *** ># servermedrxiv          -0.010855   0.002665  -4.073 4.65e-05 *** ># s(year)1                0.062495   0.011993   5.211 1.89e-07 *** ># s(year)2                0.167269   0.016043  10.427  < 2e-16 *** ># s(year)3                0.074766   0.005292  14.128  < 2e-16 *** ># servermedrxiv:s(year)1 -0.043600   0.013370  -3.261  0.00111 **  ># servermedrxiv:s(year)2 -0.080205   0.017877  -4.487 7.27e-06 *** ># servermedrxiv:s(year)3 -0.037947   0.006095  -6.226 4.86e-10 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 18: >#  ># Coefficients: >#                         Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.055623   0.003070  18.118  < 2e-16 *** ># servermedrxiv          -0.019832   0.003475  -5.707 1.16e-08 *** ># s(year)1                0.005570   0.011953   0.466  0.64121     ># s(year)2                0.004442   0.012669   0.351  0.72590     ># s(year)3                0.029483   0.005790   5.092 3.56e-07 *** ># servermedrxiv:s(year)1 -0.004511   0.014467  -0.312  0.75518     ># servermedrxiv:s(year)2 -0.004996   0.015310  -0.326  0.74420     ># servermedrxiv:s(year)3 -0.020712   0.006854  -3.022  0.00252 **  ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 19: >#  ># Coefficients: >#                          Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             0.0135625  0.0025954   5.226 1.75e-07 *** ># servermedrxiv           0.0273584  0.0029990   9.122  < 2e-16 *** ># s(year)1                0.0004498  0.0100170   0.045   0.9642     ># s(year)2               -0.0062480  0.0105217  -0.594   0.5526     ># s(year)3               -0.0031321  0.0044045  -0.711   0.4770     ># servermedrxiv:s(year)1 -0.0031514  0.0122084  -0.258   0.7963     ># servermedrxiv:s(year)2  0.0281903  0.0131796   2.139   0.0324 *   ># servermedrxiv:s(year)3  0.0027790  0.0056994   0.488   0.6258     ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 >#  >#  ># Topic 20: >#  ># Coefficients: >#                          Estimate Std. Error t value Pr(>|t|)     ># (Intercept)             6.741e-03  1.935e-03   3.483 0.000496 *** ># servermedrxiv           3.143e-02  2.184e-03  14.387  < 2e-16 *** ># s(year)1               -1.592e-03  7.699e-03  -0.207 0.836227     ># s(year)2               -4.659e-05  8.218e-03  -0.006 0.995476     ># s(year)3                4.395e-04  3.409e-03   0.129 0.897431     ># servermedrxiv:s(year)1  8.825e-03  9.696e-03   0.910 0.362723     ># servermedrxiv:s(year)2  1.280e-02  1.071e-02   1.196 0.231831     ># servermedrxiv:s(year)3  2.137e-02  4.640e-03   4.606 4.12e-06 *** ># --- ># Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"publication-year","dir":"Articles","previous_headings":"Analysing and interpreting the topic model > Covariate effects","what":"Publication year","title":"Example 1: Topic modelling Covid preprints","text":"stm offers several built-methods explore covariate effects visually. visualization effect preprint publication year expected topic proportions confirm trends appear match intuitively different phases Covid-19 pandemic. Modelling spread infections (Topic 1) high relevance initially, declined later, applies (PCR-)testing (Topic 16), vaccines (Topic 11) received limited coverage earlier preprints, became important later years. Alternatively, stminsights package used extract effects create customized charts.  biorxiv","code":"plot(covid_effect_K20,      covariate = \"year\",      method = \"continuous\",      model = covid_model_K20,      topics = c(1, 16, 11),      xaxt = \"n\",      main = 'Effect of publication year on prevalence of Topic 1 (\"epidemic \\nmodels\"), Topic 16 (\"testing\") and Topic 11 (\"vaccines\")',      labeltype = \"prob\",      xlab = \"Publication year\") axis(1, at = c(\"2020\",\"2021\",\"2022\",\"2023\"), labels = c(2020, 2021, 2022, 2023)) library(stminsights)  year_effect <- get_effects(estimates = covid_effect_K20,                             variable = \"year\",                            type = \"continuous\")  year_effect %>%   mutate(topic = as.character(topic)) %>%   mutate(topic = paste(\"Topic\", topic)) %>%     ggplot(aes(x = value, y = proportion)) +       geom_line() +       geom_ribbon(aes(ymin = lower, ymax = upper),                    alpha = 0.2, linetype = 0)  +       xlab(\"Publication year\") +       ylab(\"Topic prevalence\") +       facet_wrap(~topic, ncol = 4) +       theme_minimal()"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"preprint-server","dir":"Articles","previous_headings":"Analysing and interpreting the topic model > Covariate effects","what":"Preprint server","title":"Example 1: Topic modelling Covid preprints","text":"difference comparison multiple () topics  comparison single topic","code":"plot(covid_effect_K20,       covariate = \"server\",      topics = c(17),      model = covid_model_K20,        method = \"pointestimate\",      #cov.value1 = \"biorxiv\", cov.value2 = \"medrxiv\",      xlab = \"Topic prevalence\",      #xlim = c(-0.18, 0.18),      main = \"Effect of preprint server\"#,      #labeltype = \"prob\"      )"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"combination-of-preprint-server-and-publication-year","dir":"Articles","previous_headings":"Analysing and interpreting the topic model > Covariate effects","what":"Combination of preprint server and publication year","title":"Example 1: Topic modelling Covid preprints","text":"topics 1 TBD","code":"biorxiv_effect <- get_effects(covid_effect_K20,                               variable = \"year\", type = \"continuous\",                                moderator = \"server\", modval = \"biorxiv\")  medrxiv_effect <- get_effects(covid_effect_K20,                               variable = \"year\", type = \"continuous\",                                moderator = \"server\", modval = \"medrxiv\")  server_effects <- bind_rows(biorxiv_effect, medrxiv_effect)  server_effects %>%   mutate(topic = as.character(topic)) %>%   mutate(topic = paste(\"Topic\", topic)) %>%     ggplot(aes(x = value, y = proportion, color = moderator,                group = moderator, fill = moderator)) +       geom_line() +       geom_ribbon(aes(ymin = lower, ymax = upper,                        fill = moderator), alpha = 0.2, linetype = 0) +       xlab(\"Publication year\") +       ylab(\"Topic prevalence\") +       facet_wrap(~topic, ncol = 4) +       theme_minimal() +       theme(legend.position = \"bottom\")"},{"path":"https://sdaume.github.io/srcquantcourse/articles/covid-preprint-topics.html","id":"exploring-the-topic-structure","dir":"Articles","previous_headings":"Analysing and interpreting the topic model","what":"Exploring the topic structure","title":"Example 1: Topic modelling Covid preprints","text":"primary, secondary etc topics topic correlations topic clusters","code":""},{"path":[]},{"path":"https://sdaume.github.io/srcquantcourse/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stefan Daume. Author, maintainer.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Daume S (2024). srcquantcourse: Scripts Exercises SRC Quantitative Methods PhD Course. R package version 0.0.0.9000,  https://sdaume.github.io/srcquantcourse, https://sdaume.github.io/srcquantcourse/, https://github.com/sdaume/srcquantcourse.","code":"@Manual{,   title = {srcquantcourse: Scripts and Exercises for the SRC Quantitative Methods PhD Course},   author = {Stefan Daume},   year = {2024},   note = {R package version 0.0.0.9000,  https://sdaume.github.io/srcquantcourse, https://sdaume.github.io/srcquantcourse/},   url = {https://github.com/sdaume/srcquantcourse}, }"},{"path":"https://sdaume.github.io/srcquantcourse/index.html","id":"srcquantcourse","dir":"","previous_headings":"","what":"Scripts and Exercises for the SRC Quantitative Methods PhD Course","title":"Scripts and Exercises for the SRC Quantitative Methods PhD Course","text":"goal srcquantcourse provide sample analysis, replication scripts exercises data analysis module SRC Quantitative Methods PhD Course; part module concentrates probabilistic topic modelling.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Scripts and Exercises for the SRC Quantitative Methods PhD Course","text":"can install development version srcquantcourse GitHub : Alternatively, clone repo (https://github.com/sdaume/srcquantcourse) order work modify scripts.","code":"# install.packages(\"devtools\") devtools::install_github(\"sdaume/srcquantcourse\")"},{"path":"https://sdaume.github.io/srcquantcourse/index.html","id":"license-credits-and-acknowledgements","dir":"","previous_headings":"","what":"License, credits and acknowledgements","title":"Scripts and Exercises for the SRC Quantitative Methods PhD Course","text":"package shared MIT License. package relies several R packages listed package DESCRIPTION` accompanying scripts. work packages’ authors hereby gratefully acknowledged. illustrate methods covered package preprint meta-data bioRxiv medRxiv used. preprint servers provide API access preprints also explicitly intended support text mining; hereby gratefully acknowledged. actual preprints shared package, scripts utilizing medrxivr package provided obtain preprint data replicate results. package developed support education research Stockholm Resilience Centre; research benefited funding Swedish Research Council Sustainable Development (Formas).","code":""},{"path":"https://sdaume.github.io/srcquantcourse/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Scripts and Exercises for the SRC Quantitative Methods PhD Course","text":"package author(s) associated bioRxiv medRxiv. package developed reusable tool education author(s) research comes guarantee correctness results included package functions.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/reference/covid_effect_K20.html","id":null,"dir":"Reference","previous_headings":"","what":"An STM regression object for a topic model with 20 topics — covid_effect_K20","title":"An STM regression object for a topic model with 20 topics — covid_effect_K20","text":"package data set provides results applying stm::estimateEffect() function included covid_effect_K20 topic model object.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/reference/covid_effect_K20.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An STM regression object for a topic model with 20 topics — covid_effect_K20","text":"","code":"covid_effect_K20"},{"path":"https://sdaume.github.io/srcquantcourse/reference/covid_effect_K20.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An STM regression object for a topic model with 20 topics — covid_effect_K20","text":"STM regression object","code":""},{"path":"https://sdaume.github.io/srcquantcourse/reference/covid_model_K20.html","id":null,"dir":"Reference","previous_headings":"","what":"An STM topic model with 20 topics — covid_model_K20","title":"An STM topic model with 20 topics — covid_model_K20","text":"package data set provides sample STM topic model K = 20 topics (see stm::stm()). model fit bioRxiv medRxiv preprints 2020 2023 contain terms 'sars-cov' 'covid' title abstract. model fit respective preprint server publication year topic prevalence covariates. included covid_effect_K20 dataset captures regression parameters document covariates.","code":""},{"path":"https://sdaume.github.io/srcquantcourse/reference/covid_model_K20.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An STM topic model with 20 topics — covid_model_K20","text":"","code":"covid_model_K20"},{"path":"https://sdaume.github.io/srcquantcourse/reference/covid_model_K20.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An STM topic model with 20 topics — covid_model_K20","text":"STM topic model object","code":""},{"path":"https://sdaume.github.io/srcquantcourse/reference/srcquantcourse.html","id":null,"dir":"Reference","previous_headings":"","what":"Scripts and exercises for the SRC Quantitative Methods PhD Course — srcquantcourse","title":"Scripts and exercises for the SRC Quantitative Methods PhD Course — srcquantcourse","text":"package collects scripts, data exercises notes 2024 SRC Quantitative Methods PhD course.","code":""}]
